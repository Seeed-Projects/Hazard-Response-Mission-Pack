[
    {
        "id": "e404a21a200ea798",
        "type": "subflow",
        "name": "face recognization - clear faces",
        "info": "",
        "category": "※vision-computing",
        "in": [
            {
                "x": 40,
                "y": 140,
                "wires": [
                    {
                        "id": "2271c8e79360da12"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1620,
                "y": 120,
                "wires": [
                    {
                        "id": "99c9b37632c5c033",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#B0CBFF",
        "status": {
            "x": 980,
            "y": 280,
            "wires": [
                {
                    "id": "27ac2da36edceb77",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "1891c8a9c8279dc1",
        "type": "group",
        "z": "e404a21a200ea798",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f498bbc270cb5e99",
            "a9a2f7647a0e4ed4"
        ],
        "x": 954,
        "y": 39,
        "w": 492,
        "h": 82
    },
    {
        "id": "93233531937b3c5b",
        "type": "group",
        "z": "e404a21a200ea798",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1757226126fc2011",
            "b9e071b6f00c3d67",
            "27ac2da36edceb77",
            "2271c8e79360da12"
        ],
        "x": 124,
        "y": 99,
        "w": 782,
        "h": 82
    },
    {
        "id": "033919525f9f8f52",
        "type": "group",
        "z": "e404a21a200ea798",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4a7e17d4865cffa2",
            "87c774e28eacd57b"
        ],
        "x": 954,
        "y": 139,
        "w": 492,
        "h": 82
    },
    {
        "id": "f498bbc270cb5e99",
        "type": "file",
        "z": "e404a21a200ea798",
        "g": "1891c8a9c8279dc1",
        "name": "override records",
        "filename": "/data/files/_face_recognization/records.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1340,
        "y": 80,
        "wires": [
            [
                "99c9b37632c5c033"
            ]
        ]
    },
    {
        "id": "a9a2f7647a0e4ed4",
        "type": "function",
        "z": "e404a21a200ea798",
        "g": "1891c8a9c8279dc1",
        "name": "empty arrary payload",
        "func": "return {\n    payload: []\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 80,
        "wires": [
            [
                "f498bbc270cb5e99"
            ]
        ]
    },
    {
        "id": "1757226126fc2011",
        "type": "file in",
        "z": "e404a21a200ea798",
        "g": "93233531937b3c5b",
        "name": "get records",
        "filename": "/data/files/_face_recognization/records.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "b9e071b6f00c3d67"
            ]
        ]
    },
    {
        "id": "b9e071b6f00c3d67",
        "type": "json",
        "z": "e404a21a200ea798",
        "g": "93233531937b3c5b",
        "name": "to json",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "27ac2da36edceb77"
            ]
        ]
    },
    {
        "id": "27ac2da36edceb77",
        "type": "function",
        "z": "e404a21a200ea798",
        "g": "93233531937b3c5b",
        "name": "get total face number",
        "func": "// 获取输入的 payload 数组\nlet inputArray = msg.payload;\n\n// 检查输入是否是一个数组\nif (Array.isArray(inputArray)) {\n    // 获取数组的元素数量\n    let elementCount = inputArray.length;\n    \n    // 将元素数量作为新的 payload 输出\n    msg.payload = elementCount;\n} else {\n    // 如果输入不是数组，输出一个错误消息\n    msg.payload = \"输入的 payload 不是一个数组\";\n}\n\n// 返回消息对象\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 140,
        "wires": [
            [
                "a9a2f7647a0e4ed4",
                "4a7e17d4865cffa2"
            ]
        ]
    },
    {
        "id": "2271c8e79360da12",
        "type": "function",
        "z": "e404a21a200ea798",
        "g": "93233531937b3c5b",
        "name": "send empty msg",
        "func": "\nreturn {\n    topic: '',\n    payload: ''\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 140,
        "wires": [
            [
                "1757226126fc2011"
            ]
        ]
    },
    {
        "id": "4a7e17d4865cffa2",
        "type": "function",
        "z": "e404a21a200ea798",
        "g": "033919525f9f8f52",
        "name": "empty object payload",
        "func": "return {\n    payload: {}\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "87c774e28eacd57b"
            ]
        ]
    },
    {
        "id": "87c774e28eacd57b",
        "type": "file",
        "z": "e404a21a200ea798",
        "g": "033919525f9f8f52",
        "name": "override records-name",
        "filename": "/data/files/_face_recognization/records-name.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1320,
        "y": 180,
        "wires": [
            [
                "99c9b37632c5c033"
            ]
        ]
    },
    {
        "id": "99c9b37632c5c033",
        "type": "join",
        "z": "e404a21a200ea798",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4090eb5792412927",
        "type": "subflow",
        "name": "face recognization - get faces",
        "info": "",
        "category": "※vision-computing",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "16b0d0cdb64d28b3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 100,
                "wires": [
                    {
                        "id": "a13cca7fb9aa7d7f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#B0CBFF",
        "status": {
            "x": 560,
            "y": 200,
            "wires": [
                {
                    "id": "c3a84f1cf9e4f549",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "16b0d0cdb64d28b3",
        "type": "file in",
        "z": "4090eb5792412927",
        "name": "get records-name",
        "filename": "/data/files/_face_recognization/records-name.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 230,
        "y": 100,
        "wires": [
            [
                "a13cca7fb9aa7d7f"
            ]
        ]
    },
    {
        "id": "a13cca7fb9aa7d7f",
        "type": "json",
        "z": "4090eb5792412927",
        "name": "to json",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 410,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c3a84f1cf9e4f549",
        "type": "status",
        "z": "4090eb5792412927",
        "name": "",
        "scope": null,
        "x": 370,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c5b584eb17fdf706",
        "type": "subflow",
        "name": "face recognization - recognize face",
        "info": "",
        "category": "※vision-computing",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "16819fbb21a27697"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1240,
                "y": 520,
                "wires": [
                    {
                        "id": "5b94bf340246e2f4",
                        "port": 0
                    },
                    {
                        "id": "44d6327fc2130e2d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "similarity",
                "type": "num",
                "value": "0.5",
                "ui": {
                    "label": {
                        "zh-CN": "Similarity",
                        "en-US": "Similarity"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#B0CBFF",
        "status": {
            "x": 1240,
            "y": 580,
            "wires": [
                {
                    "id": "3d9fa93c082008e6",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "57d31dd28e179a83",
        "type": "group",
        "z": "c5b584eb17fdf706",
        "name": "get current face vector",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6119ca70cef18695",
            "822916ab0d9311d2",
            "b10beb24b2cfe3e1",
            "94ec4bf104636819",
            "eacdc21c158e48a0",
            "16819fbb21a27697",
            "8bb12f72033949dd",
            "b8156427366ffbc0",
            "20ccfceca2c8a814"
        ],
        "x": 134,
        "y": 79,
        "w": 1252,
        "h": 222
    },
    {
        "id": "e6f197a5204b1d19",
        "type": "group",
        "z": "c5b584eb17fdf706",
        "name": "get all vectors computing",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "81d8c848044b4824",
            "cdeb1ae0239a071a",
            "3c1501d272224b44",
            "1a6981a43e2ef392",
            "e69c7076a06a204d",
            "e7ef601afcf5adf7"
        ],
        "x": 134,
        "y": 319,
        "w": 1112,
        "h": 102
    },
    {
        "id": "7f68e627b4ad456a",
        "type": "group",
        "z": "c5b584eb17fdf706",
        "name": "get face name by face id",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "abd38a3bfba94980",
            "7a46d18411e71823",
            "5b94bf340246e2f4"
        ],
        "x": 134,
        "y": 439,
        "w": 592,
        "h": 82
    },
    {
        "id": "6119ca70cef18695",
        "type": "good-face-detection",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "",
        "returnValue": "1",
        "threshold": "0.1",
        "absolutePathDir": "",
        "x": 440,
        "y": 160,
        "wires": [
            [
                "822916ab0d9311d2"
            ]
        ]
    },
    {
        "id": "822916ab0d9311d2",
        "type": "function",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "check if face exists",
        "func": "if (msg.payload.data.face.length === 1){\n    msg.next = true;\n    msg.payload = msg.payload.data.face;\n} else if (msg.payload.data.face.length === 0) {\n    msg.next = false;\n    msg.errMsg = \"Couldn't find the face. Please try again.\";\n} else {\n    msg.next = false;\n    msg.errMsg = \"There are several faces. Please register only one person.\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 160,
        "wires": [
            [
                "b10beb24b2cfe3e1"
            ]
        ]
    },
    {
        "id": "b10beb24b2cfe3e1",
        "type": "switch",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 160,
        "wires": [
            [
                "94ec4bf104636819"
            ],
            [
                "eacdc21c158e48a0",
                "b8156427366ffbc0"
            ]
        ]
    },
    {
        "id": "94ec4bf104636819",
        "type": "good-face-vectorization",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "",
        "inputType": "1",
        "returnType": "0",
        "method": "0",
        "path": "./example.txt",
        "x": 1110,
        "y": 120,
        "wires": [
            [
                "20ccfceca2c8a814"
            ]
        ]
    },
    {
        "id": "eacdc21c158e48a0",
        "type": "function",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "Error Messege",
        "func": "node.warn(msg.errMsg);",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "81d8c848044b4824",
        "type": "good-calculate-cosine",
        "z": "c5b584eb17fdf706",
        "g": "e6f197a5204b1d19",
        "name": "",
        "file": "/data/files/_face_recognization/records.txt",
        "x": 410,
        "y": 360,
        "wires": [
            [
                "cdeb1ae0239a071a"
            ]
        ]
    },
    {
        "id": "3d9fa93c082008e6",
        "type": "status",
        "z": "c5b584eb17fdf706",
        "name": "",
        "scope": null,
        "x": 1030,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "16819fbb21a27697",
        "type": "base64",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 220,
        "y": 160,
        "wires": [
            [
                "6119ca70cef18695"
            ]
        ]
    },
    {
        "id": "cdeb1ae0239a071a",
        "type": "function",
        "z": "c5b584eb17fdf706",
        "g": "e6f197a5204b1d19",
        "name": "get face id and similarity",
        "func": "// 获取传入的payload数组\nlet array = msg.payload[0];\n\n// 初始化最大值和对应的索引\nlet maxVal = array[0];\nlet maxIndex = 0;\n\n// 遍历数组找出最大值及其对应的索引\nfor (let i = 1; i < array.length; i++) {\n    if (array[i] > maxVal) {\n        maxVal = array[i];\n        maxIndex = i;\n    }\n}\n\nflow.set('similarity', maxVal);\nflow.set('faceid', maxIndex + 1);\n\n// 返回修改后的msg对象\nreturn {\n    topic: '',\n    payload: {\n        similarity: maxVal,\n        faceid: maxIndex + 1\n    }\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 360,
        "wires": [
            [
                "3c1501d272224b44"
            ]
        ]
    },
    {
        "id": "3c1501d272224b44",
        "type": "switch",
        "z": "c5b584eb17fdf706",
        "g": "e6f197a5204b1d19",
        "name": "similarity",
        "property": "payload.similarity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "similarity",
                "vt": "env"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 840,
        "y": 360,
        "wires": [
            [
                "abd38a3bfba94980"
            ],
            [
                "e69c7076a06a204d"
            ]
        ]
    },
    {
        "id": "abd38a3bfba94980",
        "type": "file in",
        "z": "c5b584eb17fdf706",
        "g": "7f68e627b4ad456a",
        "name": "get records-name",
        "filename": "/data/files/_face_recognization/records-name.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "7a46d18411e71823"
            ]
        ]
    },
    {
        "id": "7a46d18411e71823",
        "type": "json",
        "z": "c5b584eb17fdf706",
        "g": "7f68e627b4ad456a",
        "name": "to json",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 430,
        "y": 480,
        "wires": [
            [
                "5b94bf340246e2f4"
            ]
        ]
    },
    {
        "id": "5b94bf340246e2f4",
        "type": "function",
        "z": "c5b584eb17fdf706",
        "g": "7f68e627b4ad456a",
        "name": "get face name",
        "func": "\nreturn {\n    topic: 'success',\n    payload: msg.payload[flow.get('faceid')]\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "8bb12f72033949dd",
        "type": "link out",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "err output",
        "mode": "link",
        "links": [
            "44d6327fc2130e2d"
        ],
        "x": 1220,
        "y": 260,
        "wires": [],
        "l": true
    },
    {
        "id": "44d6327fc2130e2d",
        "type": "link in",
        "z": "c5b584eb17fdf706",
        "name": "err output'",
        "links": [
            "8bb12f72033949dd",
            "1a6981a43e2ef392"
        ],
        "x": 1140,
        "y": 460,
        "wires": [
            []
        ],
        "l": true
    },
    {
        "id": "b8156427366ffbc0",
        "type": "function",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "error msg",
        "func": "\nreturn {\n    topic: 'err'\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 260,
        "wires": [
            [
                "8bb12f72033949dd"
            ]
        ]
    },
    {
        "id": "1a6981a43e2ef392",
        "type": "link out",
        "z": "c5b584eb17fdf706",
        "g": "e6f197a5204b1d19",
        "name": "err output",
        "mode": "link",
        "links": [
            "44d6327fc2130e2d"
        ],
        "x": 1160,
        "y": 380,
        "wires": [],
        "l": true
    },
    {
        "id": "e69c7076a06a204d",
        "type": "function",
        "z": "c5b584eb17fdf706",
        "g": "e6f197a5204b1d19",
        "name": "error msg",
        "func": "\nreturn {\n    topic: 'err'\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "1a6981a43e2ef392"
            ]
        ]
    },
    {
        "id": "e7ef601afcf5adf7",
        "type": "link in",
        "z": "c5b584eb17fdf706",
        "g": "e6f197a5204b1d19",
        "name": "step-1'",
        "links": [
            "20ccfceca2c8a814"
        ],
        "x": 210,
        "y": 360,
        "wires": [
            [
                "81d8c848044b4824"
            ]
        ],
        "l": true
    },
    {
        "id": "20ccfceca2c8a814",
        "type": "link out",
        "z": "c5b584eb17fdf706",
        "g": "57d31dd28e179a83",
        "name": "step-1",
        "mode": "link",
        "links": [
            "e7ef601afcf5adf7"
        ],
        "x": 1310,
        "y": 120,
        "wires": [],
        "l": true
    },
    {
        "id": "5bb547dce475f866",
        "type": "subflow",
        "name": "face recognization - register a face",
        "info": "",
        "category": "※vision-computing",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "1bd947ef0136bf4a"
                    },
                    {
                        "id": "fb700ec9c87b1f8b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2340,
                "y": 400,
                "wires": [
                    {
                        "id": "09d5c1594e88a074",
                        "port": 0
                    },
                    {
                        "id": "a601c4964f762916",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#B0CBFF",
        "status": {
            "x": 2340,
            "y": 540,
            "wires": [
                {
                    "id": "0b1a4ae0fb685dac",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a18ab3f640fb968f",
        "type": "group",
        "z": "5bb547dce475f866",
        "name": "get current face vector",
        "style": {
            "label": true
        },
        "nodes": [
            "eb2c8ec65d140976",
            "bf02cef20c7c5573",
            "f8aa938b61591ffb",
            "2ca56057b286ed99",
            "061cd6fe11f24d84",
            "1bd947ef0136bf4a",
            "fb700ec9c87b1f8b",
            "a641359c4d064d04",
            "015f9db91af3e390",
            "bb060c49a5f4dc36",
            "5b84894c77c1fc50"
        ],
        "x": 134,
        "y": 39,
        "w": 1232,
        "h": 202
    },
    {
        "id": "0574b46850707de5",
        "type": "group",
        "z": "5bb547dce475f866",
        "name": "update records-name file",
        "style": {
            "label": true
        },
        "nodes": [
            "77d34c5dcff131de",
            "571941aded192eef",
            "f145c165bea3f87a",
            "244f3d42bf4c2b31",
            "3f60edfd50035b43"
        ],
        "x": 134,
        "y": 439,
        "w": 1052,
        "h": 82
    },
    {
        "id": "e18cdbece1ee414b",
        "type": "group",
        "z": "5bb547dce475f866",
        "name": "update records file",
        "style": {
            "label": true
        },
        "nodes": [
            "d8d29a2e1f68dfe7",
            "13ea454879d2d2db",
            "6fe4a735d30c679b",
            "fe36be70f959558f",
            "d5eb4430aeb03f2b",
            "613abc3d927e73b0",
            "d515c361989c804d",
            "82ed87c64df302ee",
            "a65f432ce45eef27"
        ],
        "x": 134,
        "y": 259,
        "w": 1352,
        "h": 162
    },
    {
        "id": "eb2c8ec65d140976",
        "type": "good-face-detection",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "",
        "returnValue": "1",
        "threshold": "0.1",
        "absolutePathDir": "",
        "x": 400,
        "y": 140,
        "wires": [
            [
                "bf02cef20c7c5573",
                "5b84894c77c1fc50"
            ]
        ]
    },
    {
        "id": "bf02cef20c7c5573",
        "type": "function",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "check if face exists",
        "func": "if (msg.payload.data.face.length === 1){\n    msg.next = true;\n    msg.payload = msg.payload.data.face;\n} else if (msg.payload.data.face.length === 0) {\n    msg.next = false;\n    msg.errMsg = \"Couldn't find the face. Please try again.\";\n} else {\n    msg.next = false;\n    msg.errMsg = \"There are several faces. Please register only one person.\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 140,
        "wires": [
            [
                "f8aa938b61591ffb"
            ]
        ]
    },
    {
        "id": "f8aa938b61591ffb",
        "type": "switch",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 140,
        "wires": [
            [
                "2ca56057b286ed99"
            ],
            [
                "061cd6fe11f24d84",
                "015f9db91af3e390"
            ]
        ]
    },
    {
        "id": "2ca56057b286ed99",
        "type": "good-face-vectorization",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "",
        "inputType": "1",
        "returnType": "0",
        "method": "1",
        "path": "/data/files/_face_recognization/records.txt",
        "x": 970,
        "y": 120,
        "wires": [
            [
                "bb060c49a5f4dc36"
            ]
        ]
    },
    {
        "id": "061cd6fe11f24d84",
        "type": "function",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "Error Messege",
        "func": "return console.log(msg.errMsg);",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0b1a4ae0fb685dac",
        "type": "status",
        "z": "5bb547dce475f866",
        "name": "",
        "scope": null,
        "x": 2110,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "1bd947ef0136bf4a",
        "type": "base64",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 220,
        "y": 140,
        "wires": [
            [
                "eb2c8ec65d140976"
            ]
        ]
    },
    {
        "id": "d8d29a2e1f68dfe7",
        "type": "file in",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "get records",
        "filename": "/data/files/_face_recognization/records.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 470,
        "y": 380,
        "wires": [
            [
                "13ea454879d2d2db"
            ]
        ]
    },
    {
        "id": "13ea454879d2d2db",
        "type": "json",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "to json",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "6fe4a735d30c679b"
            ]
        ]
    },
    {
        "id": "6fe4a735d30c679b",
        "type": "join",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 360,
        "wires": [
            [
                "d5eb4430aeb03f2b"
            ]
        ]
    },
    {
        "id": "fe36be70f959558f",
        "type": "function",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "combine new records array",
        "func": "var payload = msg.payload;\n\nvar elementToAdd = payload[0][0];\n\nvar targetArray = payload[1];\n\ntargetArray.push(elementToAdd);\n\nmsg.payload = targetArray;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "613abc3d927e73b0"
            ]
        ]
    },
    {
        "id": "fb700ec9c87b1f8b",
        "type": "change",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "set input name",
        "rules": [
            {
                "t": "set",
                "p": "input_name",
                "pt": "flow",
                "to": "topic",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d5eb4430aeb03f2b",
        "type": "function",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "set face id",
        "func": "var faceId = parseInt(msg.payload[1].length + 1);\n\nflow.set('current_face_id', faceId);\nmsg.current_face_id = faceId;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "fe36be70f959558f",
                "a65f432ce45eef27"
            ]
        ]
    },
    {
        "id": "613abc3d927e73b0",
        "type": "file",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "override records",
        "filename": "/data/files/_face_recognization/records.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1380,
        "y": 300,
        "wires": [
            [
                "d476491945a48358"
            ]
        ]
    },
    {
        "id": "77d34c5dcff131de",
        "type": "file in",
        "z": "5bb547dce475f866",
        "g": "0574b46850707de5",
        "name": "get records-name",
        "filename": "/data/files/_face_recognization/records-name.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 410,
        "y": 480,
        "wires": [
            [
                "244f3d42bf4c2b31"
            ]
        ]
    },
    {
        "id": "571941aded192eef",
        "type": "file",
        "z": "5bb547dce475f866",
        "g": "0574b46850707de5",
        "name": "override records-name",
        "filename": "/data/files/_face_recognization/records-name.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1060,
        "y": 480,
        "wires": [
            [
                "d476491945a48358"
            ]
        ]
    },
    {
        "id": "f145c165bea3f87a",
        "type": "function",
        "z": "5bb547dce475f866",
        "g": "0574b46850707de5",
        "name": "add face id and name",
        "func": "msg.payload[msg.current_face_id] = '' + flow.get(\"input_name\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 480,
        "wires": [
            [
                "571941aded192eef"
            ]
        ]
    },
    {
        "id": "244f3d42bf4c2b31",
        "type": "json",
        "z": "5bb547dce475f866",
        "g": "0574b46850707de5",
        "name": "to json",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 590,
        "y": 480,
        "wires": [
            [
                "f145c165bea3f87a"
            ]
        ]
    },
    {
        "id": "d476491945a48358",
        "type": "join",
        "z": "5bb547dce475f866",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1570,
        "y": 420,
        "wires": [
            [
                "29d4d7e465696410"
            ]
        ]
    },
    {
        "id": "09d5c1594e88a074",
        "type": "function",
        "z": "5bb547dce475f866",
        "name": "build output message",
        "func": "\nreturn {\n    topic: 'success',\n    payload: flow.get(\"current_face_id\")\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a641359c4d064d04",
        "type": "link out",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "err output",
        "mode": "link",
        "links": [
            "a601c4964f762916"
        ],
        "x": 1060,
        "y": 200,
        "wires": [],
        "l": true
    },
    {
        "id": "015f9db91af3e390",
        "type": "function",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "error msg",
        "func": "\nreturn {\n    topic: 'err'\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 200,
        "wires": [
            [
                "a641359c4d064d04"
            ]
        ]
    },
    {
        "id": "a601c4964f762916",
        "type": "link in",
        "z": "5bb547dce475f866",
        "name": "err output'",
        "links": [
            "a641359c4d064d04"
        ],
        "x": 2180,
        "y": 360,
        "wires": [
            []
        ],
        "l": true
    },
    {
        "id": "d515c361989c804d",
        "type": "link in",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "get current face vector'",
        "links": [
            "bb060c49a5f4dc36"
        ],
        "x": 260,
        "y": 380,
        "wires": [
            [
                "d8d29a2e1f68dfe7"
            ]
        ],
        "l": true
    },
    {
        "id": "bb060c49a5f4dc36",
        "type": "link out",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "get current face vector",
        "mode": "link",
        "links": [
            "d515c361989c804d",
            "f1956fa040a5ae36",
            "82ed87c64df302ee"
        ],
        "x": 1240,
        "y": 120,
        "wires": [],
        "l": true
    },
    {
        "id": "82ed87c64df302ee",
        "type": "link in",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "get current face vector'",
        "links": [
            "bb060c49a5f4dc36"
        ],
        "x": 260,
        "y": 340,
        "wires": [
            [
                "6fe4a735d30c679b"
            ]
        ],
        "l": true
    },
    {
        "id": "3f60edfd50035b43",
        "type": "link in",
        "z": "5bb547dce475f866",
        "g": "0574b46850707de5",
        "name": "parallel-2'",
        "links": [
            "a65f432ce45eef27"
        ],
        "x": 220,
        "y": 480,
        "wires": [
            [
                "77d34c5dcff131de"
            ]
        ],
        "l": true
    },
    {
        "id": "a65f432ce45eef27",
        "type": "link out",
        "z": "5bb547dce475f866",
        "g": "e18cdbece1ee414b",
        "name": "parallel-2",
        "mode": "link",
        "links": [
            "3f60edfd50035b43"
        ],
        "x": 1100,
        "y": 380,
        "wires": [],
        "l": true
    },
    {
        "id": "9b13775bb0e64b3b",
        "type": "file",
        "z": "5bb547dce475f866",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1940,
        "y": 420,
        "wires": [
            [
                "09d5c1594e88a074"
            ]
        ]
    },
    {
        "id": "5b84894c77c1fc50",
        "type": "change",
        "z": "5bb547dce475f866",
        "g": "a18ab3f640fb968f",
        "name": "set cropped_image",
        "rules": [
            {
                "t": "set",
                "p": "cropped_image",
                "pt": "flow",
                "to": "payload.originImg",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "29d4d7e465696410",
        "type": "function",
        "z": "5bb547dce475f866",
        "name": "prepare to write file",
        "func": "var faceid = flow.get('cropped_image');\n\nreturn {\n    faceid: faceid,\n    filename: '/data/files/_face_recognization/images/' + flow.get(\"current_face_id\") + '.jpg',\n    payload: faceid\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 420,
        "wires": [
            [
                "9b13775bb0e64b3b"
            ]
        ]
    }
]